{"version":3,"sources":["components/DisplayGame.js","App.js","index.js"],"names":["Game","useState","quote","setQuote","newQuote","setNextQuote","timer","setTimer","reset","setReset","i","useEffect","ticker","setInterval","tick","clearInterval","fetchQuote","fetch","then","response","json","data","content","a","NextQuote","className","id","split","map","letter","onChange","e","input","document","getElementById","domLetters","getElementsByClassName","arrayLetters","splitQuote","splitTyped","target","value","localeCompare","forEach","index","classList","add","remove","length","App","ReactDOM","render","StrictMode"],"mappings":"uOAiGeA,MA7Ff,WACI,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAuBJ,mBAAS,GAAhC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA0BN,oBAAS,GAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACGC,EAAE,EAENC,qBAAU,WACT,IAAIC,EAAOC,YAAYC,EAAK,KAC5B,OAAO,kBAAMC,cAAcH,OAI3BD,qBAAU,WACNJ,EAAS,KACX,CAACC,IAEH,IAAMM,EAAO,WACTP,EAASD,EAAM,IAInB,SAASU,IACD,OAAOC,MAAM,iCACZC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAI,OAAGA,EAAKC,WAzBd,4CA2BR,4BAAAC,EAAA,sEAC2BP,IAD3B,OACUZ,EADV,OAEID,EAASC,GACTK,GAAUD,GAHd,4CA3BQ,sBA+Ed,OA9CMG,qBAAU,YAjCF,mCAkCJa,KAEF,CAACpB,IA4CP,sBAAKqB,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,SACF,8BAAMnB,MAEJ,qBAAKoB,GAAG,eAAeD,UAAY,gBAAnC,SAAoDvB,EAAMyB,MAAM,IAAIC,KAAI,SAAAC,GAAU,OAAM,sBAAMJ,UAAU,SAASC,GAAIhB,IAA7B,SAAmCmB,SAC3H,0BAAUH,GAAI,aAAaD,UAAY,cAAcK,SA/CjC,SAACC,GACjB,IAAIC,EAAQC,SAASC,eAAe,cAChCC,EAAaF,SAASG,uBAAuB,UAC7CC,EAAY,YAAOF,GACnBG,EAAapC,EAAMyB,MAAM,IACzBY,EAAaR,EAAES,OAAOC,MAAMd,MAAM,IAEM,IAAxCI,EAAES,OAAOC,MAAMC,cAAcxC,GACjCoC,EAAWK,SAAQ,SAACd,EAAOe,GAEnBf,IAAUU,EAAWK,IAAUL,EAAWK,IAE1CT,EAAWS,GAAOC,UAAUC,IAAI,aAChCX,EAAWS,GAAOC,UAAUE,OAAO,YAI/BlB,IAASU,EAAWK,IAExBT,EAAWS,GAAOC,UAAUC,IAAI,WAChCX,EAAWS,GAAOC,UAAUE,OAAO,cAG/BR,EAAWS,SAAWV,EAAWU,SACrCb,EAAWS,GAAOC,UAAUE,OAAO,aACnCZ,EAAWS,GAAOC,UAAUE,OAAO,gBAGvCf,EAAMS,MAAO,GACbJ,EAAaM,SAAQ,SAAAd,GACjBA,EAAOgB,UAAUE,OAAO,WACxBlB,EAAOgB,UAAUE,OAAO,aACxB1C,GAAcD,cC9DnB6C,MARf,WACE,OACE,qBAAKxB,UAAU,MAAf,SACE,cAAC,EAAD,OCFNyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFnB,SAASC,eAAe,W","file":"static/js/main.66f5d996.chunk.js","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport '../styles/style.css'\n\n\nfunction Game() {\n    const [quote, setQuote] =useState(\"\")\n    const [newQuote,setNextQuote] = useState(false)\n    const [timer,setTimer]=useState(0)\n    const [reset, setReset] = useState(false)\n   let i=0;\n\n   useEffect(()=>{\n    let ticker=setInterval(tick,1000)\n    return () => clearInterval(ticker);\n    \n    })\n\n    useEffect(()=>{\n        setTimer(0)\n    },[reset])\n\n    const tick = () =>{\n        setTimer(timer+1)\n        \n      }\n    \n    function fetchQuote(){\n            return fetch('http://api.quotable.io/random')\n            .then(response =>response.json())\n            .then(data =>data.content)\n        }\n        async function NextQuote(){\n            const newQuote = await fetchQuote();\n            setQuote(newQuote)\n            setReset(!reset)\n\n        }      \n        useEffect(() => {\n            NextQuote()\n\n        },[newQuote]);\n\n        const handleChange= (e) =>{\n            let input = document.getElementById(\"quoteInput\");\n            let domLetters = document.getElementsByClassName(\"letter\");\n            let arrayLetters = [...domLetters]\n            let splitQuote = quote.split(\"\");\n            let splitTyped = e.target.value.split(\"\");\n\n            if (e.target.value.localeCompare(quote) !== 0 ){\n            splitQuote.forEach((letter,index)=>{\n\n                if (letter !==splitTyped[index] && splitTyped[index]){\n\n                    domLetters[index].classList.add(\"incorrect\")\n                    domLetters[index].classList.remove(\"correct\")\n                    \n\n                }\n                else if(letter===splitTyped[index]){\n\n                    domLetters[index].classList.add(\"correct\")\n                    domLetters[index].classList.remove(\"incorrect\")\n                   \n                }\n                else if(splitTyped.length !== splitQuote.length){\n                    domLetters[index].classList.remove(\"incorrect\")\n                    domLetters[index].classList.remove(\"correct\")\n                } \n            })}else{\n                input.value =\"\";\n                arrayLetters.forEach(letter=>{\n                    letter.classList.remove(\"correct\")\n                    letter.classList.remove(\"incorrect\")\n                    setNextQuote(!newQuote)\n                })\n            }\n\n            \n        }\n\n   \n\n  return (\n    <div className=\"container\">\n        <div className=\"timer\">\n      <div>{timer}</div>\n    </div>\n        <div id=\"quoteDisplay\" className = \"quote-display\">{quote.split(\"\").map(letter =>{return<span className=\"letter\" id={i++}>{letter}</span>})}</div>\n        <textarea id =\"quoteInput\" className = \"quote-input\" onChange={handleChange}></textarea>\n        \n\n      \n    </div>\n  );\n}\n\nexport default Game;\n","import React from 'react';\nimport Game from './components/DisplayGame'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}